version: '3'

vars:
  REQUIRED_TOOLS_LIST: gum
  # K8S_CLUSTER_NAME: '{{.K8S_CLUSTER_NAME | default "nke-gitops-management"}}'
  # CLUSTER_PROFILE: '{{.CLUSTER_PROFILE | default "llm-management"}}'
  # ENVIRONMENT_TYPE: '{{.ENVIRONMENT | default "non-prod"}}'
  # PRISM_CENTRAL_ENDPOINT: '{{.PRISM_CENTRAL_ENDPOINT | default "prism-central.kalm-main-20-1-ocp.ncnlabs.ninja"}}'
  # PRISM_CENTRAL_USER: '{{.PRISM_CENTRAL_USER | default "admin"}}'
  # PRISM_CENTRAL_PASS: '{{.PRISM_CENTRAL_PASS | default "nutanix/4u"}}'

env:
  ## gum charm cli util defaults
  GUM_INPUT_PROMPT_FOREGROUND: 99
  GUM_INPUT_CURSOR_FOREGROUND: 99
  GUM_INPUT_HEADER_FOREGROUND: 240
  GUM_INPUT_WIDTH: 100
  GUM_INPUT_TIMEOUT: 0
  GUM_INPUT_PROMPT: "> "
  FOREGROUND: "#99000"

tasks:

  default:
  - task: :helpers:validate
    vars:
      REQUIRED_TOOLS_LIST: "{{.REQUIRED_TOOLS_LIST}}"

  e2e-bootstrap:
    silent: true
    desc: Initializes cluster configs, commits locally, pushes remotely & bootstraps FluxCD End to End
    cmds:
    - task: cluster-configs
    - task: :fluxcd:bootstrap

  cluster-configs:
    silent: true
    desc: Initializes Cluster Configs based on Cluster Profile and Target K8s Cluster
    vars:
      K8S_CLUSTER_NAME:
        sh: 'task bootstrap:gum -- input --header "What is your Kubernetes Cluster Name" --placeholder "nke-nvd-llm-management"'
      K8S_DISTRO:
        sh: 'task bootstrap:gum -- choose --header "What is Kubernetes Distribution?" "nke" "ocp" "rke2" "eksa"'
      CLUSTER_PROFILE:
        sh: 'task bootstrap:gum -- choose --header "Which Cluster Profile would you like to Bootstrap?" "llm-management" "llm-workloads"'
      ENVIRONMENT_TYPE:
        sh: 'task bootstrap:gum -- choose --header "What Type of Environment is this?" "non-prod" "prod" '
      CLUSTER_ADDONS:
        sh: 'task bootstrap:gum -- choose --no-limit --header "Which additional add-ons would you like to enable?" "gpu-operator" "gpu-time-slicing" "nutanix-csi-files" "nutanix-cosi"'
    cmds:

    ## initialize new cluster based on k8s distro
    - task: init-local-configs
      vars:
        K8S_CLUSTER_NAME: "{{.K8S_CLUSTER_NAME}}"
        K8S_DISTRO: "{{.K8S_DISTRO}}"
        CLUSTER_PROFILE: "{{.CLUSTER_PROFILE}}"
        ENVIRONMENT_TYPE: "{{.ENVIRONMENT_TYPE}}"
        CLUSTER_ADDONS: "{{.CLUSTER_ADDONS}}"

    ## print summary of vars
    - task: print-vars
      vars:
        K8S_CLUSTER_NAME: "{{.K8S_CLUSTER_NAME}}"
        K8S_DISTRO: "{{.K8S_DISTRO}}"
        CLUSTER_PROFILE: "{{.CLUSTER_PROFILE}}"
        ENVIRONMENT_TYPE: "{{.ENVIRONMENT_TYPE}}"
        CLUSTER_ADDONS: "{{.CLUSTER_ADDONS}}"

  print-vars:
    cmds:
    - 'echo Target Kubernetes Cluster: $(gum style "{{.K8S_CLUSTER_NAME}}")'
    - 'echo Environment Details: $(gum style "{{.K8S_DISTRO}}:{{.CLUSTER_PROFILE}}:{{.ENVIRONMENT_TYPE}}")'
    - 'echo Additional Feature Addons: '
    - for: {var: CLUSTER_ADDONS}
      cmd: 'echo - $(gum style --foreground=#99000 {{.ITEM}})'


  init-local-configs:
    deps: [default]
    cmds:
    - ./init_local_configs.sh {{.K8S_CLUSTER_NAME}} {{.CLUSTER_PROFILE}} {{.ENVIRONMENT_TYPE}} true
    requires:
      vars: [PROJECT_DIR, K8S_CLUSTER_NAME, CLUSTER_PROFILE, ENVIRONMENT_TYPE]
    status:
    - test -f clusters/{{.K8S_CLUSTER_NAME}}/platform/cluster-secrets.yaml
    - test -f clusters/{{.K8S_CLUSTER_NAME}}/platform/cluster-configs.yaml
    - test -f clusters/{{.K8S_CLUSTER_NAME}}/platform/kustomization.yaml

  ## needed to make sure environment variables are passed into shell cli in dynamic variables
  gum:
    cmds:
    - gum {{.CLI_ARGS}}
    silent: true
