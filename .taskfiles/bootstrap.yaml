version: '3'

vars:
  REQUIRED_TOOLS_LIST: gum kubectl git

tasks:

  default:
  - task: :helpers:validate
    vars:
      REQUIRED_TOOLS_LIST: "{{.REQUIRED_TOOLS_LIST}}"

  full:
    silent: true
    deps: [nke-prompt]
    preconditions:
    - sh: test -f ./cluster-secrets.yaml
      msg: './cluster-secrets.yaml not found, please copy ./cluster-secrets.yaml.example and update manually'
    - sh: test -f ./cluster-configs.yaml
      msg: './cluster-configs.yaml not found, please copy ./cluster-configs.yaml.example and update manually'
    desc: Initializes cluster configs, commits and pushes remotely & bootstraps FluxCD
    cmds:
    - task: configs
    - task: :flux:bootstrap

  nke-prompt:
    vars:
      NKE_PROMPT:
        sh: 'task bootstrap:gum -- choose --header "Would you like to download creds for NKE cluster?" "yes" "no"'
    cmds:
    - '{{if eq .NKE_PROMPT "yes"}} task nke:select-creds {{end}}'

  configs:
    silent: true
    deps: [default]
    desc: Initializes Cluster Configs based on Cluster Profile and Target K8s Cluster
    vars:
      K8S_CLUSTER_CONTEXT:
        sh: kubectl config view -o jsonpath='{range .contexts[*]}{.name}{"\n"}{end}' | gum filter --placeholder "Select Target Kubernetes Cluster Context..."
      K8S_CLUSTER_NAME:
        sh: kubectl config view -o jsonpath='{.contexts[?(@.name == "{{.K8S_CLUSTER_CONTEXT}}")].context.cluster}'
      K8S_DISTRO:
        sh: 'task bootstrap:gum -- choose --header "What is Kubernetes Distribution?" "nke" "ocp" "rke2" "eksa"'
      CLUSTER_PROFILE:
        sh: 'task bootstrap:gum -- choose --header "Which Cluster Profile would you like to Bootstrap?" "llm-management" "llm-workloads"'
      ENVIRONMENT_TYPE:
        sh: 'task bootstrap:gum -- choose --header "What Type of Environment is this?" "non-prod" "prod" '
      CLUSTER_ADDONS:
        sh: 'task bootstrap:gum -- choose --no-limit --header "Which additional add-ons would you like to enable?" "gpu-operator" "gpu-time-slicing" "nutanix-csi-files" "nutanix-cosi"'
    cmds:
    ## initialize new cluster based on k8s distro
    - task: init-local-configs
      vars:
        K8S_CLUSTER_NAME: "{{.K8S_CLUSTER_NAME}}"
        K8S_DISTRO: "{{.K8S_DISTRO}}"
        CLUSTER_PROFILE: "{{.CLUSTER_PROFILE}}"
        ENVIRONMENT_TYPE: "{{.ENVIRONMENT_TYPE}}"
        CLUSTER_ADDONS: "{{.CLUSTER_ADDONS}}"

    ## print summary of vars
    - task: print-vars
      vars:
        K8S_CLUSTER_NAME: "{{.K8S_CLUSTER_NAME}}"
        K8S_DISTRO: "{{.K8S_DISTRO}}"
        CLUSTER_PROFILE: "{{.CLUSTER_PROFILE}}"
        ENVIRONMENT_TYPE: "{{.ENVIRONMENT_TYPE}}"
        CLUSTER_ADDONS: "{{.CLUSTER_ADDONS}}"

  print-vars:
    silent: true
    cmds:
    - 'echo Target Kubernetes Cluster: $(gum style "{{.K8S_CLUSTER_NAME}}")'
    - 'echo Environment Details: $(gum style "{{.K8S_DISTRO}}:{{.CLUSTER_PROFILE}}:{{.ENVIRONMENT_TYPE}}")'
    - 'echo Additional Feature Addons: '
    - for: {var: CLUSTER_ADDONS}
      cmd: 'echo - $(gum style --foreground=#99000 {{.ITEM}})'

  init-local-configs:
    preconditions:
    - sh: test -f ./cluster-secrets.yaml
      msg: './cluster-secrets.yaml not found, please copy ./cluster-secrets.yaml.example and update manually'
    - sh: test -f ./cluster-configs.yaml
      msg: './cluster-configs.yaml not found, please copy ./cluster-configs.yaml.example and update manually'
    silent: true
    desc: Runs ./init_local_configs.sh bash script to configure cluster configs and encrypt secrets with sops
    deps: [default]
    cmds:
    - ./init_local_configs.sh {{.K8S_CLUSTER_NAME}} {{.CLUSTER_PROFILE}} {{.ENVIRONMENT_TYPE}} true
    requires:
      vars: [PROJECT_DIR, K8S_CLUSTER_NAME, CLUSTER_PROFILE, ENVIRONMENT_TYPE]
    status:
    - test -f clusters/{{.K8S_CLUSTER_NAME}}/platform/cluster-secrets.yaml
    - test -f clusters/{{.K8S_CLUSTER_NAME}}/platform/cluster-configs.yaml
    - test -f clusters/{{.K8S_CLUSTER_NAME}}/platform/kustomization.yaml

  ## needed to make sure environment variables are passed into shell cli in dynamic variables
  gum:
    cmds:
    - gum {{.CLI_ARGS}}
    silent: true
